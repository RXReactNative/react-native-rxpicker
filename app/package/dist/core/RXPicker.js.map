{"version":3,"sources":["../../src/core/RXPicker.js"],"names":["React","Component","StyleSheet","View","Text","TouchableOpacity","PropTypes","RXPickerStyle","RXScrollPicker","RXPicker","constructor","props","dismiss","onConfirm","renderButton","title","index","leftStyle","rightStyle","style","styles","btnLeftBar","concat","btnRightBar","render","leftTitle","rightTitle","titleStyle","LineSeparatorStyle","other","container","tabBarView","titleText","height","backgroundColor","propTypes","string","object","onCancel","func","defaultProps","e","create","width","store","alignSelf","justifyContent","alignItems","flexDirection","fontSize","color","paddingHorizontal","flex","textAlign"],"mappings":"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","file":"RXPicker.js","sourcesContent":["/**\r\n * \r\n * \r\n * @flow\r\n */\r\n'use strict'\r\nimport React, {Component} from 'react';\r\nimport { \r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n} from 'react-native';\r\nimport PropTypes from 'prop-types';\r\nimport RXPickerStyle from './RXPickerStyle'\r\nimport RXScrollPicker from './RXScrollPicker';\r\n\r\nexport default class RXPicker extends Component {\r\n  static propTypes = {\r\n    ...RXScrollPicker.propTypes,\r\n    title: PropTypes.string,\r\n    titleStyle: PropTypes.object, // TextPropTypes.style 需要 react-native-web 支持，故使用object\r\n    leftTitle: PropTypes.string,\r\n    leftStyle: PropTypes.object,  // TextPropTypes.style 需要 react-native-web 支持，故使用object\r\n    rightTitle: PropTypes.string,\r\n    rightStyle: PropTypes.object, // TextPropTypes.style 需要 react-native-web 支持，故使用object\r\n    LineSeparatorStyle: PropTypes.object, // TextPropTypes.style 需要 react-native-web 支持，故使用object\r\n    onCancel: PropTypes.func,\r\n    onConfirm: PropTypes.func,\r\n  }\r\n  static defaultProps = {\r\n    ...RXScrollPicker.defaultProps,\r\n    dismiss: (e) => {},\r\n    onConfirm: (e) => {},\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  dismiss = () => {\r\n    const { dismiss} = this.props;\r\n    dismiss && dismiss();\r\n  }\r\n\r\n  onConfirm = () => {\r\n    const { onConfirm} = this.props;\r\n    onConfirm && onConfirm();\r\n  }\r\n\r\n  renderButton(title = '', index = 0) {\r\n    let { leftStyle, rightStyle } = this.props;\r\n    var style = {};\r\n    if (index === 0) {\r\n      style = [styles.btnLeftBar].concat(leftStyle);\r\n    } else {\r\n      style = [styles.btnRightBar].concat(rightStyle);\r\n    }\r\n    return (\r\n      <TouchableOpacity activeOpacity={0.5} onPress={()=>{ index ? this.onConfirm() : this.dismiss() }}>\r\n        <Text style={style}>{title}</Text>\r\n      </TouchableOpacity>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { style, leftTitle, rightTitle,title, titleStyle, LineSeparatorStyle, ...other } = this.props;\r\n    return (\r\n      <View style={[styles.container, style]}>\r\n        <View style={styles.tabBarView}>\r\n          {this.renderButton(leftTitle ? leftTitle : '取消', 0)}\r\n          <Text style={[styles.titleText, titleStyle]}>{title ? title : '请选择'}</Text>\r\n          {this.renderButton(rightTitle ? rightTitle : '确定', 1)}\r\n        </View>\r\n        <View style={[{height: 1, backgroundColor: '#f0ebeb'}, LineSeparatorStyle]}/>\r\n        <RXScrollPicker {...other} />\r\n      </View>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: RXPickerStyle.store.container.width,\r\n    alignSelf: 'center',\r\n  },\r\n  tabBarView: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flexDirection: 'row',\r\n    height: RXPickerStyle.store.tabBarView.height,\r\n  },\r\n  btnLeftBar: {\r\n    fontSize: RXPickerStyle.store.btnLeftBar.fontSize,\r\n    color: RXPickerStyle.store.btnLeftBar.color,\r\n    paddingHorizontal: RXPickerStyle.store.btnLeftBar.paddingHorizontal,\r\n  },\r\n  btnRightBar: {\r\n    fontSize: RXPickerStyle.store.btnRightBar.fontSize,\r\n    color: RXPickerStyle.store.btnRightBar.color,\r\n    paddingHorizontal: RXPickerStyle.store.btnRightBar.paddingHorizontal,\r\n  },\r\n  titleText: {\r\n    flex: 1,\r\n    textAlign: RXPickerStyle.store.titleText.textAlign,\r\n    fontSize: RXPickerStyle.store.titleText.fontSize,\r\n    color: RXPickerStyle.store.titleText.color,\r\n  },\r\n});"]}