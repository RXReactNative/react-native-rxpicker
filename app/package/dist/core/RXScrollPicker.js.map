{"version":3,"sources":["../../src/core/RXScrollPicker.js"],"names":["React","Component","StyleSheet","View","Text","PixelRatio","ScrollView","PropTypes","RXConfigArray","RXPickerStyle","px","get","DEFAULT_CONTAINER_HEIGHT","variables","mtdBorderColorDark","store","mtdVSpacingL","RXScrollPicker","constructor","props","data","initialize","state","targetItemHeight","containerHeight","containerRef","scrollers","list","proportion","value","length","TypeError","offsetCount","placeholderList","map","scrollItem","tmp","concat","push","apply","unshift","componentDidMount","getUIData","then","resizeContainerHeight","setState","uiData","forEach","item","index","scrollTo","catch","e","console","log","componentWillReceiveProps","nextProps","setTimeout","element","accurateHeight","maxCount","count","Promise","resolve","reject","toCheck","measure","ret","x","y","width","height","left","top","needToReset","minHeight","maxHeight","Math","floor","rect","locateIndicator","createElement","style","styles","indicator","pointerEvents","indicatorMask","bottom","borderBottomWidth","borderBottomColor","borderTopWidth","borderTopColor","scrollIndex","targetItemIndex","animated","scrollProper","onScroll","scrollHeight","onChange","scrollListLength","newScrollHeight","min","max","quotient","parseInt","String","halfHeight","render","ref","el","container","contentStyle","key","proportionWrapper","flex","Number","c","scroller","scrollEventThrottle","showsVerticalScrollIndicator","contentContainerStyle","scrollerContentContainer","nativeEvent","contentOffset","targetItem","onLayout","layout","ceil","renderItem","targetItemContent","numberOfLines","label","propTypes","arrayOf","oneOfType","object","string","number","func","defaultProps","create","flexDirection","backgroundColor","alignItems","paddingVertical","textAlign","position","right","zIndex","indicatorTarget"],"mappings":"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","file":"RXScrollPicker.js","sourcesContent":["/**\r\n *\r\n * 参考：\r\n *  beeshell - ScrollPicker -->  https://github.com/Meituan-Dianping/beeshell\r\n *\r\n * @flow\r\n */\r\n\"use strict\"\r\nimport React, {Component} from \"react\"\r\nimport { StyleSheet, View, Text, PixelRatio, ScrollView } from \"react-native\"\r\n\r\nimport PropTypes from 'prop-types'\r\nimport { RXConfigArray } from '../utils/RXUtils'\r\nimport RXPickerStyle from './RXPickerStyle'\r\n\r\nconst px = 1 / PixelRatio.get();\r\nconst DEFAULT_CONTAINER_HEIGHT = 1;\r\n\r\nconst variables = {\r\n  mtdBorderColorDark: RXPickerStyle.store.mtdBorderColorDark || \"#e5e5e5\",\r\n  mtdVSpacingL: RXPickerStyle.store.mtdVSpacingL || 10,\r\n};\r\n\r\nexport default class RXScrollPicker extends Component {\r\n  static propTypes = {\r\n    ...View.propTypes,\r\n    // 选择数据源，二维数组，第一层代表列，第二层代表选择项，选择项数据可以是对象（必须包含 label 属性）或者 string、number\r\n    list: PropTypes.arrayOf(\r\n      PropTypes.arrayOf(\r\n        PropTypes.oneOfType([\r\n          PropTypes.element,\r\n          PropTypes.object,\r\n          PropTypes.string,\r\n          PropTypes.number,\r\n        ])\r\n      )\r\n    ),\r\n    // 选中的数据，一维数组，数组索引代表 list 列，数组值对应 list 行，所以其长度要和数据源 list 长度一致\r\n    value: PropTypes.arrayOf(PropTypes.number),\r\n    // 分区比例，注意和数据源长度保持一致\r\n    proportion: PropTypes.arrayOf(PropTypes.number),\r\n    // 选中项距离顶部的偏移个数\r\n    offsetCount: PropTypes.number,\r\n    // 自定义渲染项\r\n    renderItem: PropTypes.func,\r\n    // 数据变化回调，该函数提供两个索引参数，第一个是列索引，第二个是行索引\r\n    onChange: PropTypes.func,\r\n  };\r\n\r\n  static defaultProps = {\r\n    ...View.defaultProps,\r\n    // renderItem: (e)=> { return null },\r\n    onChange: (scrollIndex = 0, targetItemIndex = 0) => {},\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const data = this.initialize(props);\r\n    this.state = {\r\n      ...data,\r\n      targetItemHeight: null,\r\n      containerHeight: null,\r\n    };\r\n    this.containerRef = null;\r\n    this.scrollers = [];\r\n    this.targetItemHeight = null;\r\n    this.containerHeight = null;\r\n    this.containerRef = null;\r\n  }\r\n\r\n  initialize(props) {\r\n    let { list, proportion, value } = props;\r\n    if (!list || !list.length) {\r\n      throw TypeError(\"提供有效的 list 参数\");\r\n    }\r\n    const { offsetCount } = this.props;\r\n    const placeholderList = RXConfigArray(offsetCount).map(() => {\r\n      return \"\";\r\n    });\r\n    list = list.map((scrollItem) => {\r\n      const tmp = scrollItem.concat();\r\n      [].push.apply(tmp, placeholderList);\r\n      [].unshift.apply(tmp, placeholderList);\r\n      return tmp;\r\n    });\r\n    const length = list.length;\r\n    if (\r\n      !proportion ||\r\n      !proportion.length ||\r\n      (proportion && proportion.length && proportion.length !== length)\r\n    ) {\r\n      proportion = RXConfigArray(length).map(() => {\r\n        return 1;\r\n      });\r\n    }\r\n    if (\r\n      !value ||\r\n      !value.length ||\r\n      (value && value.length && value.length !== length)\r\n    ) {\r\n      value = RXConfigArray(length).map(() => {\r\n        return 0;\r\n      });\r\n    }\r\n    return {\r\n      list,\r\n      value,\r\n      proportion,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUIData(this.containerRef, DEFAULT_CONTAINER_HEIGHT)\r\n      .then((data) => {\r\n        const { targetItemHeight } = data;\r\n        const containerHeight = this.resizeContainerHeight(targetItemHeight);\r\n        this.setState(\r\n          {\r\n            containerHeight,\r\n            targetItemHeight,\r\n          },\r\n          () => {\r\n            this.getUIData(this.containerRef, this.state.containerHeight)\r\n              .then((uiData) => {\r\n                const { value } = this.state;\r\n                value.forEach((item, index) => {\r\n                  this.scrollTo(index, item, false);\r\n                });\r\n              })\r\n              .catch((e) => {\r\n                console.log(e);\r\n              });\r\n          }\r\n        );\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps !== this.props) {\r\n      const data = this.initialize(nextProps);\r\n      this.setState(\r\n        {\r\n          ...data,\r\n        },\r\n        () => {\r\n          setTimeout(() => {\r\n            const { value } = this.state;\r\n            value.forEach((item, index) => {\r\n              this.scrollTo(index, item);\r\n            });\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  getUIData(element, accurateHeight, maxCount) {\r\n    let count = 0;\r\n    maxCount = maxCount == null ? 20 : maxCount;\r\n    return new Promise((resolve, reject) => {\r\n      let toCheck = null;\r\n      let measure = () => {\r\n        let ret = null;\r\n        element.measure((x, y, width, height, left, top) => {\r\n          // console.log(\r\n          //   `Get container height: ${height}, accurate height: ${accurateHeight} and target item height: ${\r\n          //     this.targetItemHeight\r\n          //   } for ${++count}th.`\r\n          // )\r\n          if (height) {\r\n            // 安卓机器获取高度不精确\r\n            const needToReset = height % 1 === 0 ? false : true;\r\n            let minHeight;\r\n            let maxHeight;\r\n            if (needToReset) {\r\n              minHeight = Math.floor(height);\r\n              maxHeight = minHeight + 1;\r\n            } else {\r\n              minHeight = maxHeight = height;\r\n            }\r\n            if (\r\n              (minHeight === accurateHeight || maxHeight === accurateHeight) &&\r\n              this.targetItemHeight\r\n            ) {\r\n              ret = {\r\n                rect: {\r\n                  x,\r\n                  y,\r\n                  width,\r\n                  height,\r\n                },\r\n                targetItemHeight: this.targetItemHeight,\r\n              };\r\n            }\r\n          }\r\n          toCheck(ret);\r\n        });\r\n      };\r\n      toCheck = (ret) => {\r\n        if (ret) {\r\n          return resolve(ret);\r\n        } else {\r\n          if (count < maxCount) {\r\n            setTimeout(() => {\r\n              measure();\r\n            }, 20);\r\n          } else {\r\n            return reject('获取元素高度失败！');\r\n          }\r\n        }\r\n      };\r\n      measure();\r\n    });\r\n  }\r\n\r\n  resizeContainerHeight(targetItemHeight) {\r\n    const {offsetCount} = this.props;\r\n    const ret = targetItemHeight + 2 * (targetItemHeight * offsetCount);\r\n    return ret;\r\n  }\r\n\r\n  locateIndicator(targetItemHeight) {\r\n    const { offsetCount } = this.props;\r\n    return React.createElement(\r\n      View,\r\n      {\r\n        style: [styles.indicator],\r\n        pointerEvents: 'none',\r\n      },\r\n      React.createElement(View, {\r\n        style: [\r\n          styles.indicator,\r\n          styles.indicatorMask,\r\n          {\r\n            bottom: targetItemHeight + offsetCount * targetItemHeight,\r\n          },\r\n          {\r\n            borderBottomWidth: 1 * px,\r\n            borderBottomColor: variables.mtdBorderColorDark,\r\n          },\r\n        ],\r\n      }),\r\n      React.createElement(View, {\r\n        style: [\r\n          styles.indicator,\r\n          styles.indicatorMask,\r\n          {\r\n            top: targetItemHeight + offsetCount * targetItemHeight,\r\n          },\r\n          {\r\n            borderTopWidth: 1 * px,\r\n            borderTopColor: variables.mtdBorderColorDark,\r\n          },\r\n        ],\r\n      })\r\n    );\r\n  }\r\n\r\n  scrollTo(scrollIndex, targetItemIndex, animated) {\r\n    const { targetItemHeight } = this.state;\r\n    // const { offsetCount } = this.props\r\n    this.scrollProper(\r\n      scrollIndex,\r\n      targetItemHeight * targetItemIndex,\r\n      animated\r\n    );\r\n  }\r\n\r\n  onScroll(scrollIndex, scrollHeight) {\r\n    const targetItemIndex = this.scrollProper(scrollIndex, scrollHeight);\r\n    this.props.onChange && this.props.onChange(scrollIndex, targetItemIndex);\r\n  }\r\n\r\n  scrollProper(scrollIndex, scrollHeight, animated) {\r\n    const {targetItemHeight, list} = this.state;\r\n    const {offsetCount} = this.props;\r\n    const scrollListLength = list[scrollIndex].length;\r\n    let newScrollHeight;\r\n    const min = 0;\r\n    const max = (scrollListLength - 2 * offsetCount - 1) * targetItemHeight;\r\n    if (scrollHeight <= min) {\r\n      newScrollHeight = min;\r\n    } else if (scrollHeight >= max) {\r\n      newScrollHeight = max;\r\n    } else {\r\n      const quotient = parseInt(String(scrollHeight / targetItemHeight), 10);\r\n      newScrollHeight = quotient * targetItemHeight;\r\n      const halfHeight = targetItemHeight / 2;\r\n      if (scrollHeight - newScrollHeight > halfHeight) {\r\n        newScrollHeight += targetItemHeight;\r\n      }\r\n    }\r\n    this.scrollers[scrollIndex] &&\r\n      this.scrollers[scrollIndex].scrollTo &&\r\n      this.scrollers[scrollIndex].scrollTo({\r\n        x: 0,\r\n        y: newScrollHeight,\r\n        animated: animated === false ? false : true,\r\n      });\r\n    const targetItemIndex = newScrollHeight / targetItemHeight;\r\n    return targetItemIndex;\r\n  }\r\n\r\n  render() {\r\n    const { list, proportion, containerHeight, targetItemHeight } = this.state;\r\n    return React.createElement(\r\n      View,\r\n      {\r\n        ref: (el) => {\r\n          this.containerRef = el;\r\n        },\r\n        style: [\r\n          styles.container,\r\n          this.props.contentStyle,\r\n          {\r\n            height: containerHeight || DEFAULT_CONTAINER_HEIGHT,\r\n          },\r\n        ],\r\n      },\r\n      containerHeight && this.locateIndicator(targetItemHeight),\r\n      list.map((scrollItem, scrollIndex) => {\r\n        return React.createElement(\r\n          View,\r\n          {\r\n            key: scrollIndex,\r\n            style: [\r\n              styles.proportionWrapper,\r\n              {\r\n                flex: Number(proportion[scrollIndex]),\r\n              },\r\n            ],\r\n          },\r\n          React.createElement(\r\n            ScrollView,\r\n            {\r\n              ref: (c) => {\r\n                this.scrollers[scrollIndex] = c;\r\n              },\r\n              style: styles.scroller,\r\n              scrollEventThrottle: 20,\r\n              showsVerticalScrollIndicator: false,\r\n              contentContainerStyle: [styles.scrollerContentContainer],\r\n              // onScrollEndDrag: (e) => { // 由于 react-native-web 版本不同，有的不支持\r\n              //   this.onScroll(scrollIndex, e.nativeEvent.contentOffset.y);\r\n              // },\r\n              onScroll: (e) => {\r\n                this.onScroll(scrollIndex, e.nativeEvent.contentOffset.y);\r\n              },\r\n            },\r\n            scrollItem.map((item, index) => {\r\n              return React.createElement(\r\n                View,\r\n                {\r\n                  key: index,\r\n                  style: [\r\n                    styles.targetItem,\r\n                    {\r\n                      height: targetItemHeight,\r\n                    },\r\n                  ],\r\n                  onLayout: (e) => {\r\n                    if (\r\n                      item &&\r\n                      this.targetItemHeight == null &&\r\n                      e.nativeEvent.layout.height\r\n                    ) {\r\n                      this.targetItemHeight = Math.ceil(\r\n                        e.nativeEvent.layout.height\r\n                      );\r\n                      // console.log(\r\n                      //   'OnLayout get target item height:',\r\n                      //   this.targetItemHeight\r\n                      // )\r\n                    }\r\n                  },\r\n                },\r\n                this.props.renderItem\r\n                  ? this.props.renderItem(item, index)\r\n                  : React.createElement(\r\n                      Text,\r\n                      {\r\n                        style: [styles.targetItemContent],\r\n                        numberOfLines: 1,\r\n                      },\r\n                      typeof item === 'object' ? item.label : item\r\n                    )\r\n              );\r\n            })\r\n          )\r\n        );\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: 'row',\r\n    backgroundColor: '#fff',\r\n  },\r\n  proportionWrapper: {\r\n    flexDirection: 'column',\r\n  },\r\n  scroller: {\r\n    flex: 1,\r\n  },\r\n  scrollerContentContainer: {\r\n    alignItems: 'center',\r\n  },\r\n  targetItem: {\r\n    flexDirection: 'row',\r\n    alignItems: \"center\",\r\n  },\r\n  targetItemContent: {\r\n    flex: 1,\r\n    paddingVertical: variables.mtdVSpacingL,\r\n    textAlign: \"center\",\r\n  },\r\n  indicator: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    zIndex: 1,\r\n  },\r\n  indicatorMask: {\r\n    backgroundColor: \"rgba(255, 255, 255, 0.75)\",\r\n  },\r\n  indicatorTarget: {},\r\n});\r\n"]}