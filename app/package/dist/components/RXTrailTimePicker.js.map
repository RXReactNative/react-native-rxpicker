{"version":3,"sources":["../../src/components/RXTrailTimePicker.js"],"names":["React","Component","PropTypes","RXDateUtil","RXPicker","RXConfigArray","RXIsLeapYear","RXConvert2Digit","RXTrailTimePicker","constructor","props","yearArray","monthArray","dayArray","hourArray","yearSelectIndex","monthSelectIndex","daySelectIndex","hourSelectIndex","initialize","state","selectMap","limitDay","nowDate","getNextDate","nowDateMap","formatDateMap","month","day","yearShow","preDay","selectDate","selectValues","selectDateMap","selectYear","year","selectMonth","selectDay","selectHour","hour","lastYear","lastMonth","lastDay","lastHour","selectMothMap","getSelectMonth","array","selectIndex","selectDayMap","getSelectDays","selectHourMap","getSelectHour","Date","restoreNum","preMonth","dayNum","getDay","nowDay","index","MaxCount","i","dateString","getWeek","push","numString","split","parseInt","isNaN","render","title","other","length","list","value","proportion","paddingBottom","onChange","onConfirm","propTypes","object","number","defaultProps","date","getFullYear","setFullYear","week","weekString","weekStringArray","tempHour","maxHour","hourString","scrollIndex","targetItemIndex","tempMonthArray","tempMonthSelectIndex","tempDayArray","tempDaySelectIndex","tempHourArray","tempHourSelectIndex","setState","currentDate","setHours"],"mappings":"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","file":"RXTrailTimePicker.js","sourcesContent":["/**\r\n * \r\n * \r\n * @flow\r\n */\r\n'use strict'\r\nimport React, {Component} from 'react';\r\nimport { } from 'react-native';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport RXDateUtil from '../utils/RXDateUtil';\r\nimport RXPicker from '../core/RXPicker';\r\nimport {RXConfigArray, RXIsLeapYear, RXConvert2Digit} from '../utils/RXUtils';\r\n\r\nexport default class RXTrailTimePicker extends Component {\r\n  static propTypes = {\r\n    ...RXPicker.propTypes,\r\n    selectValues: PropTypes.object,\r\n    limitDay: PropTypes.number,\r\n  }\r\n\r\n  static defaultProps = {\r\n    ...RXPicker.defaultProps,\r\n    limitDay: 7,\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const { \r\n      yearArray , monthArray, dayArray, hourArray,\r\n      yearSelectIndex, monthSelectIndex, daySelectIndex, hourSelectIndex,\r\n      // lastHour,\r\n      // preDay, lastYear, lastMonth, lastDay \r\n    } = this.initialize(props);\r\n\r\n    this.state = {\r\n      yearArray , monthArray, dayArray, hourArray,\r\n      yearSelectIndex, monthSelectIndex, daySelectIndex, hourSelectIndex,\r\n    };\r\n    this.selectMap = RXConfigArray(6);\r\n  }\r\n\r\n  initialize(props) {\r\n    let limitDay = props.limitDay || 7;\r\n    let nowDate = RXDateUtil.getNextDate(0,0);\r\n    let nowDateMap = RXDateUtil.formatDateMap(nowDate);\r\n    let month = nowDateMap.month, day = nowDateMap.day;\r\n    var yearShow = false;\r\n    var preDay = 0;\r\n    if (month === 1 && day < limitDay) {\r\n      yearShow = true;\r\n      preDay = limitDay - day;\r\n    }\r\n\r\n    let selectDate = props.selectValues || RXDateUtil.getNextDate();\r\n    let selectDateMap = RXDateUtil.formatDateMap(selectDate);\r\n    let selectYear = selectDateMap.year;\r\n    let selectMonth = selectDateMap.month;\r\n    let selectDay = selectDateMap.day;\r\n    let selectHour = selectDateMap.hour;\r\n\r\n    this.preDay = preDay;\r\n    this.lastYear = nowDateMap.year;   // 年\r\n    this.lastMonth = month; // 月\r\n    this.lastDay = day;     // 日\r\n    this.lastHour = nowDateMap.hour;   // 小时\r\n\r\n    var yearArray = [];\r\n    var yearSelectIndex = 0;\r\n    if (yearShow) {\r\n      yearArray = [(nowDateMap.year - 1) + ' 年', nowDateMap.year + ' 年'];\r\n      if (nowDateMap.year === selectYear) {\r\n        yearSelectIndex = 1;\r\n      }\r\n    }\r\n    \r\n    let selectMothMap = this.getSelectMonth(selectYear, selectMonth);\r\n    let monthArray = selectMothMap.array || [];\r\n    let monthSelectIndex = selectMothMap.selectIndex || 0;\r\n\r\n    let selectDayMap = this.getSelectDays(selectYear, selectMonth, selectDay);\r\n    let dayArray = selectDayMap.array || [];\r\n    let daySelectIndex = selectDayMap.selectIndex || 0;\r\n\r\n    let selectHourMap = this.getSelectHour(selectYear, selectMonth, selectDay, selectHour);\r\n    let hourArray = selectHourMap.array || [];\r\n    let hourSelectIndex = selectHourMap.selectIndex || 0;\r\n\r\n    return { \r\n      yearArray , monthArray, dayArray, hourArray,\r\n      yearSelectIndex, monthSelectIndex, daySelectIndex, hourSelectIndex,\r\n      lastHour: selectHour,\r\n      preDay, lastYear: nowDate.year, lastMonth: month, lastDay: day,\r\n    };\r\n  }\r\n\r\n  getSelectMonth(year = 0, selectMonth = 0) {\r\n    let nowDate = new Date();\r\n    let nowDateMap = RXDateUtil.formatDateMap(nowDate);\r\n    if (!year) {\r\n      year = nowDateMap.year;\r\n    }\r\n    else {\r\n      year = this.restoreNum(year);\r\n    }\r\n    var selectIndex = 0;\r\n    if (this.lastYear > year) {\r\n      let preMonth = '12 月';\r\n      return {array: [preMonth], selectIndex};\r\n    }\r\n    else {\r\n      let lastMonth = nowDateMap.month + ' 月';\r\n      return { array:[lastMonth], selectIndex };\r\n    }\r\n  }\r\n\r\n  getSelectDays(year = 0, month = 0, selectDay = 0) {\r\n    let { limitDay } = this.props;\r\n    limitDay = limitDay || 1;\r\n    month = this.restoreNum(month);\r\n\r\n    let nowDate = new Date();\r\n    let nowDateMap = RXDateUtil.formatDateMap(nowDate);\r\n    if (!year) {\r\n      year = nowDateMap.year;\r\n    }\r\n    else {\r\n      year = this.restoreNum(year);\r\n    }\r\n\r\n    let dayNum = this.getDay(year, month);\r\n\r\n    let nowDay = nowDateMap.day;\r\n    var index = 0;\r\n    var MaxCount = limitDay;\r\n    if ( year === nowDateMap.year && month === nowDateMap.month) {\r\n      if (nowDay > limitDay - 1) {\r\n        index = nowDay - limitDay + 1;\r\n      }\r\n      else {\r\n        MaxCount = nowDay;\r\n        index = 1;\r\n      }\r\n    }\r\n    else {\r\n      MaxCount = limitDay - nowDay + 1;\r\n      index = dayNum - MaxCount;\r\n    }\r\n\r\n    var selectIndex = 0;\r\n\r\n    var array = [];\r\n    for (let i = 0; i < MaxCount; i++) {\r\n      let day = index + i;\r\n      if (day === selectDay) selectIndex = i;\r\n      let dateString = day + ' 日 ' + this.getWeek(year, month, day);\r\n      if (dateString === selectDay) selectIndex = i;\r\n      array.push(dateString);\r\n    }\r\n    return { array, selectIndex };\r\n  }\r\n\r\n  getDay(year, month) {\r\n    let dayNum = 0;\r\n    switch (month) {\r\n      case 1:\r\n      case 3:\r\n      case 5:\r\n      case 7:\r\n      case 8:\r\n      case 10:\r\n      case 12:\r\n        dayNum = 31;\r\n        break;\r\n      case 4:\r\n      case 6:\r\n      case 9:\r\n      case 11:\r\n        dayNum = 30;\r\n        break;\r\n      case 2:\r\n        dayNum = RXIsLeapYear(year) ? 29 : 28;\r\n        break;\r\n      default:\r\n        dayNum = 0;\r\n    }\r\n    return dayNum;\r\n  }\r\n\r\n  getWeek = (year, month, day) => {\r\n    if (typeof month === 'string') {\r\n      month = month.split(' ')[0] || month;\r\n    }\r\n    let date = new Date();\r\n    if (!year) {\r\n      year = date.getFullYear();\r\n    }\r\n    else {\r\n      year = this.restoreNum(year);\r\n    }\r\n    date.setFullYear(year, month - 1, day);\r\n    let week = date.getDay();\r\n    let weekString = RXDateUtil.weekStringArray()[week] || week;\r\n    return weekString;\r\n  }\r\n\r\n  getSelectHour = (year = 0, month = 0, day = 0, selectHour = 0) => {\r\n    month = this.restoreNum(month);\r\n    day = this.restoreNum(day);\r\n    if (typeof selectHour === 'string') {\r\n      let tempHour = selectHour.split(':') || [selectHour];\r\n      tempHour = parseInt(tempHour);\r\n      if (isNaN(tempHour)) {\r\n        tempHour = 0;\r\n      }\r\n      selectHour = tempHour;\r\n    }\r\n    \r\n    let nowDate = new Date();\r\n    let nowDateMap = RXDateUtil.formatDateMap(nowDate);\r\n    let maxHour = 24;\r\n    if (!year) {\r\n      year = nowDateMap.year;\r\n    }\r\n    if (\r\n      year === nowDateMap.year && \r\n      month === nowDateMap.month && \r\n      day === nowDateMap.day\r\n    ) {\r\n      maxHour = nowDateMap.hour;\r\n    }\r\n    var array = [];\r\n    var selectIndex = selectHour > maxHour ? maxHour : 0;\r\n    for (let i = 0; i <= maxHour; i++) {\r\n      if (i === selectHour) selectIndex = i;\r\n      let hourString = RXConvert2Digit(i) + ':00';\r\n      array.push(hourString);\r\n    }\r\n    return { array, selectIndex };\r\n  }\r\n\r\n  restoreNum(numString) {\r\n    if (typeof numString === 'string') {\r\n      numString = numString.split(' ')[0] || numString;\r\n      numString = parseInt(numString);\r\n      if (isNaN(numString)) {\r\n        numString = 0;\r\n      }\r\n    }\r\n    return numString;\r\n  }\r\n\r\n  onChange = (scrollIndex = 0, targetItemIndex = 0) => {\r\n    // const { onChange } = this.props;\r\n    const {\r\n      yearArray, monthArray, dayArray, hourArray,\r\n      yearSelectIndex, monthSelectIndex, daySelectIndex, hourSelectIndex,\r\n    } = this.state;\r\n    let yearShow = yearArray.length;\r\n    if (yearShow && scrollIndex === 0) {\r\n      // 年份\r\n      let selectYear = yearArray[targetItemIndex];\r\n\r\n      let selectMothMap = this.getSelectMonth(selectYear);\r\n      let tempMonthArray = selectMothMap.array || [];\r\n      let tempMonthSelectIndex = selectMothMap.selectIndex || 0;\r\n      let selectMonth = tempMonthArray[tempMonthSelectIndex];\r\n\r\n      let selectDay = dayArray[daySelectIndex];\r\n      let selectDayMap = this.getSelectDays(selectYear, selectMonth, selectDay);\r\n      let tempDayArray = selectDayMap.array || [];\r\n      let tempDaySelectIndex = selectDayMap.selectIndex || 0;\r\n\r\n      let selectHour = hourArray[hourSelectIndex];\r\n      let selectHourMap = this.getSelectHour(selectYear, selectMonth, selectDay, selectHour);\r\n      let tempHourArray = selectHourMap.array || [];\r\n      let tempHourSelectIndex = selectHourMap.selectIndex || 0;\r\n      this.setState({ \r\n        yearSelectIndex: targetItemIndex,\r\n        monthArray: tempMonthArray, monthSelectIndex: tempMonthSelectIndex,\r\n        dayArray: tempDayArray, daySelectIndex: tempDaySelectIndex,\r\n        hourArray: tempHourArray, hourSelectIndex: tempHourSelectIndex,\r\n      })\r\n    }\r\n    else if ((yearShow && scrollIndex === 1) ||\r\n        (!yearShow && scrollIndex === 0)\r\n      ) {\r\n      // 月份\r\n      var selectYear = (new Date()).getFullYear();\r\n      if (yearShow) {\r\n        selectYear = yearArray[yearSelectIndex];\r\n      }\r\n      let selectMonth = monthArray[targetItemIndex];\r\n\r\n      let selectDay = dayArray[daySelectIndex];\r\n      let selectDayMap = this.getSelectDays(selectYear, selectMonth, selectDay);\r\n      let tempDayArray = selectDayMap.array || [];\r\n      let tempDaySelectIndex = selectDayMap.selectIndex || 0;\r\n\r\n      let selectHour = hourArray[hourSelectIndex];\r\n      let selectHourMap = this.getSelectHour(selectYear, selectMonth, selectDay, selectHour);\r\n      let tempHourArray = selectHourMap.array || [];\r\n      let tempHourSelectIndex = selectHourMap.selectIndex || 0;\r\n      this.setState({ \r\n        monthSelectIndex: targetItemIndex,\r\n        dayArray: tempDayArray, daySelectIndex: tempDaySelectIndex,\r\n        hourArray: tempHourArray, hourSelectIndex: tempHourSelectIndex,\r\n      })\r\n    }\r\n    else if ((yearShow && scrollIndex === 2) ||\r\n          (!yearShow && scrollIndex === 1)\r\n      ){\r\n      // 日\r\n      var selectYear = (new Date()).getFullYear();\r\n      if (yearShow) {\r\n        selectYear = yearArray[yearSelectIndex];\r\n      }\r\n      let selectMonth = monthArray[monthSelectIndex];\r\n\r\n      let selectDay = dayArray[targetItemIndex];\r\n\r\n      let selectHour = hourArray[hourSelectIndex];\r\n      let selectHourMap = this.getSelectHour(selectYear, selectMonth, selectDay, selectHour);\r\n      let tempHourArray = selectHourMap.array || [];\r\n      let tempHourSelectIndex = selectHourMap.selectIndex || 0;\r\n      this.setState({ \r\n        daySelectIndex: targetItemIndex,\r\n        hourArray: tempHourArray, hourSelectIndex: tempHourSelectIndex,\r\n      })\r\n    }\r\n    else if ((yearShow && scrollIndex === 3) ||\r\n          (!yearShow && scrollIndex === 2)\r\n      ){\r\n      // 小时\r\n      this.setState({ \r\n        hourSelectIndex: targetItemIndex,\r\n      })\r\n    }\r\n  }\r\n\r\n  onConfirm = () => {\r\n    const { onConfirm } = this.props;\r\n    const {\r\n      yearArray, monthArray, dayArray, hourArray,\r\n      yearSelectIndex, monthSelectIndex, daySelectIndex, hourSelectIndex,\r\n    } = this.state;\r\n    let currentDate = new Date();\r\n    let yearShow = yearArray.length;\r\n    var year = currentDate.getFullYear();\r\n    if (yearShow) {\r\n      year = this.restoreNum(yearArray[yearSelectIndex]) || year;\r\n    }\r\n\r\n    let month = this.restoreNum(monthArray[monthSelectIndex]) || 2;\r\n    let day = this.restoreNum(dayArray[daySelectIndex]) || 1;\r\n\r\n    let hourString = hourArray[hourSelectIndex] || '12:00';\r\n    let hour = hourString.split(':')[0] || 0;\r\n    currentDate.setFullYear(year, month - 1, day);\r\n    currentDate.setHours(hour, 0, 0, 0);\r\n    onConfirm && onConfirm(currentDate);\r\n  }\r\n\r\n  render() {\r\n    const { title, ...other } = this.props;\r\n    const {\r\n      yearArray , monthArray, dayArray, hourArray,\r\n      yearSelectIndex, monthSelectIndex, daySelectIndex, hourSelectIndex,\r\n    } = this.state;\r\n    let yearShow = yearArray.length;\r\n\r\n    let list = yearShow ?\r\n                [yearArray, monthArray, dayArray, hourArray]\r\n              : [monthArray, dayArray, hourArray];\r\n\r\n    let value = yearShow ?\r\n                  [yearSelectIndex, monthSelectIndex, daySelectIndex, hourSelectIndex]\r\n               :  [monthSelectIndex, daySelectIndex, hourSelectIndex];\r\n    let proportion = yearShow ? [0.5, 0.5, 2, 0,5] : [0.5, 2, 0,5];\r\n    return <RXPicker \r\n            {...other}\r\n            style={{paddingBottom: 20}}\r\n            title={title}\r\n            // 数据源\r\n            list={list}\r\n\r\n            // 选中的\r\n            value={value}\r\n\r\n            // 分区比例，注意和list数据源长度保持一致\r\n            proportion={ proportion}\r\n\r\n            // 选中项距离顶部的偏移个数\r\n            offsetCount={ 2 }\r\n            onChange={this.onChange}\r\n            onConfirm={this.onConfirm}\r\n          />\r\n  }\r\n}"]}