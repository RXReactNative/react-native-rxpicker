{"version":3,"sources":["../../src/components/RXTrailTimePicker.js"],"names":["React","Component","PropTypes","RXDateUtil","RXPicker","RXConfigArray","RXIsLeapYear","RXConvert2Digit","RXTrailTimePicker","constructor","props","yearArray","monthArray","dayArray","hourArray","yearSelectIndex","monthSelectIndex","daySelectIndex","hourSelectIndex","initialize","state","selectMap","limitDay","nowDate","getNextDate","nowDateMap","formatDateMap","month","day","yearShow","preDay","selectDate","selectValues","selectDateMap","selectYear","year","selectMonth","selectDay","selectHour","hour","lastYear","lastMonth","lastDay","lastHour","selectMothMap","getSelectMonth","array","selectIndex","selectDayMap","getSelectDays","selectHourMap","getSelectHour","Date","restoreNum","preMonth","dayNum","getDay","nowDay","index","MaxCount","i","dateString","getWeek","push","numString","split","parseInt","isNaN","render","title","other","length","list","value","proportion","paddingBottom","onChange","onConfirm","propTypes","object","number","defaultProps","date","getFullYear","setFullYear","week","weekString","weekStringArray","tempHour","maxHour","hourString","scrollIndex","targetItemIndex","tempMonthArray","tempMonthSelectIndex","tempDayArray","tempDaySelectIndex","tempHourArray","tempHourSelectIndex","setState","currentDate","setHours"],"mappings":"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","file":"RXTrailTimePicker.js","sourcesContent":["/**\n *\n *\n * @flow\n */\n'use strict'\nimport React, { Component } from 'react';\nimport { } from 'react-native';\nimport PropTypes from 'prop-types';\n\nimport RXDateUtil from '../utils/RXDateUtil';\nimport RXPicker from '../core/RXPicker';\nimport { RXConfigArray, RXIsLeapYear, RXConvert2Digit } from '../utils/RXUtils';\n\nexport default class RXTrailTimePicker extends Component {\n  static propTypes = {\n    ...RXPicker.propTypes,\n    selectValues: PropTypes.object,\n    limitDay: PropTypes.number,\n  }\n\n  static defaultProps = {\n    ...RXPicker.defaultProps,\n    limitDay: 7,\n  }\n\n  constructor(props) {\n    super(props);\n    const {\n      yearArray, monthArray, dayArray, hourArray,\n      yearSelectIndex, monthSelectIndex, daySelectIndex, hourSelectIndex,\n      // lastHour,\n      // preDay, lastYear, lastMonth, lastDay\n    } = this.initialize(props);\n\n    this.state = {\n      yearArray, monthArray, dayArray, hourArray,\n      yearSelectIndex, monthSelectIndex, daySelectIndex, hourSelectIndex,\n    };\n    this.selectMap = RXConfigArray(6);\n  }\n\n  initialize(props) {\n    const limitDay = props.limitDay || 7;\n    const nowDate = RXDateUtil.getNextDate(0, 0);\n    const nowDateMap = RXDateUtil.formatDateMap(nowDate);\n    const month = nowDateMap.month, day = nowDateMap.day;\n    let yearShow = false;\n    let preDay = 0;\n    if (month === 1 && day < limitDay) {\n      yearShow = true;\n      preDay = limitDay - day;\n    }\n\n    const selectDate = props.selectValues || RXDateUtil.getNextDate();\n    const selectDateMap = RXDateUtil.formatDateMap(selectDate);\n    const selectYear = selectDateMap.year;\n    const selectMonth = selectDateMap.month;\n    const selectDay = selectDateMap.day;\n    const selectHour = selectDateMap.hour;\n\n    this.preDay = preDay;\n    this.lastYear = nowDateMap.year;   // 年\n    this.lastMonth = month; // 月\n    this.lastDay = day;     // 日\n    this.lastHour = nowDateMap.hour;   // 小时\n\n    let yearArray = [];\n    let yearSelectIndex = 0;\n    if (yearShow) {\n      yearArray = [(nowDateMap.year - 1) + ' 年', nowDateMap.year + ' 年'];\n      if (nowDateMap.year === selectYear) {\n        yearSelectIndex = 1;\n      }\n    }\n\n    const selectMothMap = this.getSelectMonth(selectYear, selectMonth);\n    const monthArray = selectMothMap.array || [];\n    const monthSelectIndex = selectMothMap.selectIndex || 0;\n\n    const selectDayMap = this.getSelectDays(selectYear, selectMonth, selectDay);\n    const dayArray = selectDayMap.array || [];\n    const daySelectIndex = selectDayMap.selectIndex || 0;\n\n    const selectHourMap = this.getSelectHour(selectYear, selectMonth, selectDay, selectHour);\n    const hourArray = selectHourMap.array || [];\n    const hourSelectIndex = selectHourMap.selectIndex || 0;\n\n    return {\n      yearArray, monthArray, dayArray, hourArray,\n      yearSelectIndex, monthSelectIndex, daySelectIndex, hourSelectIndex,\n      lastHour: selectHour,\n      preDay, lastYear: nowDate.year, lastMonth: month, lastDay: day,\n    };\n  }\n\n  getSelectMonth(year = 0, selectMonth = 0) {\n    const nowDate = new Date();\n    const nowDateMap = RXDateUtil.formatDateMap(nowDate);\n    if (!year) {\n      year = nowDateMap.year;\n    }\n    else {\n      year = this.restoreNum(year);\n    }\n    const selectIndex = 0;\n    if (this.lastYear > year) {\n      const preMonth = '12 月';\n      return { array: [preMonth], selectIndex };\n    }\n    else {\n      const lastMonth = nowDateMap.month + ' 月';\n      return { array: [lastMonth], selectIndex };\n    }\n  }\n\n  getSelectDays(year = 0, month = 0, selectDay = 0) {\n    let { limitDay } = this.props;\n    limitDay = limitDay || 1;\n    month = this.restoreNum(month);\n\n    const nowDate = new Date();\n    const nowDateMap = RXDateUtil.formatDateMap(nowDate);\n    if (!year) {\n      year = nowDateMap.year;\n    }\n    else {\n      year = this.restoreNum(year);\n    }\n\n    const dayNum = this.getDay(year, month);\n\n    const nowDay = nowDateMap.day;\n    let index = 0;\n    let MaxCount = limitDay;\n    if (year === nowDateMap.year && month === nowDateMap.month) {\n      if (nowDay > limitDay - 1) {\n        index = nowDay - limitDay + 1;\n      }\n      else {\n        MaxCount = nowDay;\n        index = 1;\n      }\n    }\n    else {\n      MaxCount = limitDay - nowDay + 1;\n      index = dayNum - MaxCount;\n    }\n\n    let selectIndex = 0;\n\n    const array = [];\n    for (let i = 0; i < MaxCount; i++) {\n      const day = index + i;\n      if (day === selectDay) selectIndex = i;\n      const dateString = day + ' 日 ' + this.getWeek(year, month, day);\n      if (dateString === selectDay) selectIndex = i;\n      array.push(dateString);\n    }\n    return { array, selectIndex };\n  }\n\n  getDay(year, month) {\n    let dayNum = 0;\n    switch (month) {\n      case 1:\n      case 3:\n      case 5:\n      case 7:\n      case 8:\n      case 10:\n      case 12:\n        dayNum = 31;\n        break;\n      case 4:\n      case 6:\n      case 9:\n      case 11:\n        dayNum = 30;\n        break;\n      case 2:\n        dayNum = RXIsLeapYear(year) ? 29 : 28;\n        break;\n      default:\n        dayNum = 0;\n    }\n    return dayNum;\n  }\n\n  getWeek = (year, month, day) => {\n    if (typeof month === 'string') {\n      month = month.split(' ')[0] || month;\n    }\n    let date = new Date();\n    if (!year) {\n      year = date.getFullYear();\n    }\n    else {\n      year = this.restoreNum(year);\n    }\n    date.setFullYear(year, month - 1, day);\n    const week = date.getDay();\n    const weekString = RXDateUtil.weekStringArray()[week] || week;\n    return weekString;\n  }\n\n  getSelectHour = (year = 0, month = 0, day = 0, selectHour = 0) => {\n    month = this.restoreNum(month);\n    day = this.restoreNum(day);\n    if (typeof selectHour === 'string') {\n      let tempHour = selectHour.split(':') || [selectHour];\n      tempHour = parseInt(tempHour);\n      if (isNaN(tempHour)) {\n        tempHour = 0;\n      }\n      selectHour = tempHour;\n    }\n\n    const nowDate = new Date();\n    const nowDateMap = RXDateUtil.formatDateMap(nowDate);\n    let maxHour = 24;\n    if (!year) {\n      year = nowDateMap.year;\n    }\n    if (\n      year === nowDateMap.year &&\n      month === nowDateMap.month &&\n      day === nowDateMap.day\n    ) {\n      maxHour = nowDateMap.hour;\n    }\n    const array = [];\n    let selectIndex = selectHour > maxHour ? maxHour : 0;\n    for (let i = 0; i <= maxHour; i++) {\n      if (i === selectHour) selectIndex = i;\n      const hourString = RXConvert2Digit(i) + ':00';\n      array.push(hourString);\n    }\n    return { array, selectIndex };\n  }\n\n  restoreNum(numString) {\n    if (typeof numString === 'string') {\n      numString = numString.split(' ')[0] || numString;\n      numString = parseInt(numString);\n      if (isNaN(numString)) {\n        numString = 0;\n      }\n    }\n    return numString;\n  }\n\n  onChange = (scrollIndex = 0, targetItemIndex = 0) => {\n    // const { onChange } = this.props;\n    const {\n      yearArray, monthArray, dayArray, hourArray,\n      yearSelectIndex, monthSelectIndex, daySelectIndex, hourSelectIndex,\n    } = this.state;\n    const yearShow = yearArray.length;\n    if (yearShow && scrollIndex === 0) {\n      // 年份\n      const selectYear = yearArray[targetItemIndex];\n\n      const selectMothMap = this.getSelectMonth(selectYear);\n      const tempMonthArray = selectMothMap.array || [];\n      const tempMonthSelectIndex = selectMothMap.selectIndex || 0;\n      const selectMonth = tempMonthArray[tempMonthSelectIndex];\n\n      const selectDay = dayArray[daySelectIndex];\n      const selectDayMap = this.getSelectDays(selectYear, selectMonth, selectDay);\n      const tempDayArray = selectDayMap.array || [];\n      const tempDaySelectIndex = selectDayMap.selectIndex || 0;\n\n      const selectHour = hourArray[hourSelectIndex];\n      const selectHourMap = this.getSelectHour(selectYear, selectMonth, selectDay, selectHour);\n      const tempHourArray = selectHourMap.array || [];\n      const tempHourSelectIndex = selectHourMap.selectIndex || 0;\n      this.setState({\n        yearSelectIndex: targetItemIndex,\n        monthArray: tempMonthArray, monthSelectIndex: tempMonthSelectIndex,\n        dayArray: tempDayArray, daySelectIndex: tempDaySelectIndex,\n        hourArray: tempHourArray, hourSelectIndex: tempHourSelectIndex,\n      })\n    }\n    else if ((yearShow && scrollIndex === 1) ||\n      (!yearShow && scrollIndex === 0)\n    ) {\n      // 月份\n      let selectYear = (new Date()).getFullYear();\n      if (yearShow) {\n        selectYear = yearArray[yearSelectIndex];\n      }\n      const selectMonth = monthArray[targetItemIndex];\n\n      const selectDay = dayArray[daySelectIndex];\n      const selectDayMap = this.getSelectDays(selectYear, selectMonth, selectDay);\n      const tempDayArray = selectDayMap.array || [];\n      const tempDaySelectIndex = selectDayMap.selectIndex || 0;\n\n      const selectHour = hourArray[hourSelectIndex];\n      const selectHourMap = this.getSelectHour(selectYear, selectMonth, selectDay, selectHour);\n      const tempHourArray = selectHourMap.array || [];\n      const tempHourSelectIndex = selectHourMap.selectIndex || 0;\n      this.setState({\n        monthSelectIndex: targetItemIndex,\n        dayArray: tempDayArray, daySelectIndex: tempDaySelectIndex,\n        hourArray: tempHourArray, hourSelectIndex: tempHourSelectIndex,\n      })\n    }\n    else if ((yearShow && scrollIndex === 2) ||\n      (!yearShow && scrollIndex === 1)\n    ) {\n      // 日\n      let selectYear = (new Date()).getFullYear();\n      if (yearShow) {\n        selectYear = yearArray[yearSelectIndex];\n      }\n      const selectMonth = monthArray[monthSelectIndex];\n\n      const selectDay = dayArray[targetItemIndex];\n\n      const selectHour = hourArray[hourSelectIndex];\n      const selectHourMap = this.getSelectHour(selectYear, selectMonth, selectDay, selectHour);\n      const tempHourArray = selectHourMap.array || [];\n      const tempHourSelectIndex = selectHourMap.selectIndex || 0;\n      this.setState({\n        daySelectIndex: targetItemIndex,\n        hourArray: tempHourArray, hourSelectIndex: tempHourSelectIndex,\n      })\n    }\n    else if ((yearShow && scrollIndex === 3) ||\n      (!yearShow && scrollIndex === 2)\n    ) {\n      // 小时\n      this.setState({\n        hourSelectIndex: targetItemIndex,\n      })\n    }\n  }\n\n  onConfirm = () => {\n    const { onConfirm } = this.props;\n    const {\n      yearArray, monthArray, dayArray, hourArray,\n      yearSelectIndex, monthSelectIndex, daySelectIndex, hourSelectIndex,\n    } = this.state;\n    let currentDate = new Date();\n    let yearShow = yearArray.length;\n    let year = currentDate.getFullYear();\n    if (yearShow) {\n      year = this.restoreNum(yearArray[yearSelectIndex]) || year;\n    }\n\n    const month = this.restoreNum(monthArray[monthSelectIndex]) || 2;\n    const day = this.restoreNum(dayArray[daySelectIndex]) || 1;\n\n    const hourString = hourArray[hourSelectIndex] || '12:00';\n    const hour = hourString.split(':')[0] || 0;\n    currentDate.setFullYear(year, month - 1, day);\n    currentDate.setHours(hour, 0, 0, 0);\n    onConfirm && onConfirm(currentDate);\n  }\n\n  render() {\n    const { title, ...other } = this.props;\n    const {\n      yearArray, monthArray, dayArray, hourArray,\n      yearSelectIndex, monthSelectIndex, daySelectIndex, hourSelectIndex,\n    } = this.state;\n    const yearShow = yearArray.length;\n\n    const list = yearShow ?\n      [yearArray, monthArray, dayArray, hourArray]\n      : [monthArray, dayArray, hourArray];\n\n      const value = yearShow ?\n      [yearSelectIndex, monthSelectIndex, daySelectIndex, hourSelectIndex]\n      : [monthSelectIndex, daySelectIndex, hourSelectIndex];\n      const proportion = yearShow ? [0.5, 0.5, 2, 0, 5] : [0.5, 2, 0, 5];\n    return <RXPicker\n      {...other}\n      style={{ paddingBottom: 20 }}\n      title={title}\n      // 数据源\n      list={list}\n\n      // 选中的\n      value={value}\n\n      // 分区比例，注意和list数据源长度保持一致\n      proportion={proportion}\n\n      // 选中项距离顶部的偏移个数\n      offsetCount={2}\n      onChange={this.onChange}\n      onConfirm={this.onConfirm}\n    />\n  }\n}"]}