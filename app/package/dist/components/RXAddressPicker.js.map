{"version":3,"sources":["../../src/components/RXAddressPicker.js"],"names":["React","Component","PropTypes","RXPicker","RXAddressPicker","constructor","props","addressList","selectValues","result","AddressUtil","getNameWithCodes","provinceArray","provinceIndex","provinceCode","provinceName","cityArray","cityIndex","cityCode","cityName","areaArray","areaIndex","areaCode","areaName","allProvinceArray","allCityArray","allAreaArray","state","render","other","paddingBottom","onChange","onConfirm","scrollIndex","targetItemIndex","provinceDict","cityId","cityDict","getArrayWithParent","array","index","id","name","areaDict","setState","getArrayWithCityName","setTimeout","params","codes","Array","isArray","length","codeArray","split","codeValue_0","codeValue_1","codeValue_2","allDict","getPCA","code","cityIdValue","console","warn","firstItem","i","item","cityLevel","push","pCityId","newArray","parentId","allArray","itemName","propTypes","string","defaultProps"],"mappings":"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","file":"RXAddressPicker.js","sourcesContent":["/**\n *\n *\n * @flow\n */\n'use strict'\nimport React, { Component } from 'react';\nimport { } from 'react-native';\nimport PropTypes from 'prop-types';\n\nimport RXPicker from '../core/RXPicker';\n\nexport default class RXAddressPicker extends Component {\n\n  constructor(props) {\n    super(props);\n    this.addressList = props.addressList || [];\n    let selectValues = props.selectValues || '';\n    let result = AddressUtil.getNameWithCodes(this.addressList, selectValues) || {};\n\n    let provinceArray = result.provinceArray || [];\n    this.provinceIndex = result.provinceIndex || 0;\n    this.provinceCode = result.provinceCode || 0;\n    this.provinceName = result.provinceName || '';\n\n    let cityArray = result.cityArray || [];\n    this.cityIndex = result.cityIndex || 0;\n    this.cityCode = result.cityCode || 0;\n    this.cityName = result.cityName || '';\n\n    let areaArray = result.areaArray || [];\n    this.areaIndex = result.areaIndex || 0;\n    this.areaCode = result.areaCode || 0;\n    this.areaName = result.areaName || '';\n\n    this.allProvinceArray = result.allProvinceArray || [];\n    this.allCityArray = result.allCityArray || [];\n    this.allAreaArray = result.allAreaArray || [];\n\n    // alert('provinceName='+this.provinceName+',cityName='+ this.cityName+',areaName='+this.areaName);\n\n    this.state = {\n      provinceArray,\n      cityArray,\n      areaArray,\n    }\n  }\n\n  onChange = (scrollIndex = 0, targetItemIndex = 0) => {\n    const { onChange } = this.props;\n    // console.log('onChange=> scrollIndex='+scrollIndex+',,,targetItemIndex='+targetItemIndex);\n    onChange && onChange(scrollIndex, targetItemIndex);\n\n    if (scrollIndex === 0) {\n      this.provinceIndex = targetItemIndex;\n      let provinceDict = this.allProvinceArray[this.provinceIndex] || {};\n      this.provinceCode = provinceDict.cityId || 0;\n      this.provinceName = provinceDict.cityName || '';\n\n      let cityDict = AddressUtil.getArrayWithParent(this.allCityArray, this.provinceCode) || {};\n      let cityArray = cityDict.array || [];\n      this.cityIndex = cityDict.index || 0;\n      this.cityCode = cityDict.id || 0;\n      this.cityName = cityDict.name || '';\n\n      let areaDict = AddressUtil.getArrayWithParent(this.allAreaArray, this.cityCode) || {};\n      let areaArray = areaDict.array || [];\n      this.areaIndex = areaDict.index || 0;\n      this.areaCode = areaDict.id || 0;\n      this.areaName = areaDict.name || '';\n      this.setState({ cityArray, areaArray });\n    }\n    else if (scrollIndex === 1) {\n      this.cityIndex = targetItemIndex;\n      let cityDict = AddressUtil.getArrayWithCityName(this.state.cityArray, this.cityIndex, this.allCityArray) || {};\n      this.cityArray = cityDict.array || [];\n      this.cityCode = cityDict.id || 0;\n      this.cityName = cityDict.name || '';\n\n      let areaDict = AddressUtil.getArrayWithParent(this.allAreaArray, this.cityCode) || {};\n      let areaArray = areaDict.array || [];\n      this.areaIndex = areaDict.index || 0;\n      this.areaCode = areaDict.id || 0;\n      this.areaName = areaDict.name || '';\n      this.setState({ areaArray });\n    }\n    else if (scrollIndex === 2) {\n      this.areaIndex = targetItemIndex;\n      let areaDict = AddressUtil.getArrayWithCityName(this.state.areaArray, this.areaIndex, this.allAreaArray) || {};\n      this.areaCode = areaDict.id || 0;\n      this.areaName = areaDict.name || '';\n    }\n  }\n\n  onConfirm = () => {\n    const { onConfirm } = this.props;\n    setTimeout(() => {\n      let params = {\n        provinceCode: this.provinceCode,\n        provinceName: this.provinceName,\n\n        cityCode: this.cityCode,\n        cityName: this.cityName,\n\n        areaCode: this.areaCode,\n        areaName: this.areaName,\n      }\n\n      onConfirm && onConfirm(params)\n    }, 1000);\n  }\n\n  render() {\n    const { ...other } = this.props;\n    const { provinceArray, cityArray, areaArray } = this.state;\n    return <RXPicker\n      {...other}\n      style={{ paddingBottom: 20 }}\n      title={'选择地区'}\n\n      // 数据源\n      list={[provinceArray, cityArray, areaArray]}\n\n      // 选中的\n      value={[this.provinceIndex, this.cityIndex, this.areaIndex]}\n\n      // 分区比例，注意和list数据源长度保持一致 (如果一致的，可以不写)\n      // proportion={ [1, 1, 1] }\n      // 选中项距离顶部的偏移个数\n      offsetCount={2}\n      onChange={this.onChange}\n      onConfirm={this.onConfirm}\n    />\n  }\n}\n\n\n\nexport const AddressUtil = {\n\n  getNameWithCodes(array = [], codes = '') {\n\n    if (!array || !Array.isArray(array) || !array.length) {\n      return null;\n    }\n\n    let codeArray = codes.split(',') || [];\n    if (!Array.isArray(codeArray)) {\n      codeArray = [0, 0, 0];\n    }\n    var codeValue_0 = '';\n    var codeValue_1 = '';\n    var codeValue_2 = '';\n    if (codeArray.length > 0) codeValue_0 = codeArray[0] || 0;\n    if (codeArray.length > 1) codeValue_1 = codeArray[1] || 0;\n    if (codeArray.length > 2) codeValue_2 = codeArray[2] || 0;\n\n    let allDict = AddressUtil.getPCA(array, codeValue_0);\n    let provinceArray = allDict.provinceArray || [];\n    let provinceIndex = allDict.index || 0;\n    let provinceCode = allDict.id || 0;\n    let provinceName = allDict.name || '';\n\n    let allProvinceArray = allDict.allProvinceArray || [];\n    let allCityArray = allDict.allCityArray || [];\n    let allAreaArray = allDict.allAreaArray || [];\n\n    let cityDict = AddressUtil.getArrayWithParent(allCityArray, provinceCode, codeValue_1);\n    let cityArray = cityDict.array || [];\n    let cityIndex = cityDict.index || 0;\n    let cityCode = cityDict.id || 0;\n    let cityName = cityDict.name || '';\n\n    let areaDict = AddressUtil.getArrayWithParent(allAreaArray, cityCode, codeValue_2);\n    let areaArray = areaDict.array || [];\n    let areaIndex = areaDict.index || 0;\n    let areaCode = areaDict.code || 0;\n    let areaName = areaDict.name || '';\n    return {\n      allProvinceArray, allCityArray, allAreaArray,\n\n      provinceArray, provinceIndex, provinceCode, provinceName,\n      cityArray, cityIndex, cityCode, cityName,\n      areaArray, areaIndex, areaCode, areaName\n    }\n  },\n\n  getPCA(array = [], cityIdValue = '') {\n    //{cityId: 3124, cityName: \"崇左市\", cityLevel: 2, parentId: 3015, cityCode: 144}\n    let provinceArray = [];\n    let allProvinceArray = [];\n    let allCityArray = [];\n    let allAreaArray = [];\n    array = array || [];\n    if (!Array.isArray(array)) {\n      console.warn('getArrayName-> `array` not array');\n      return { allProvinceArray, allCityArray, allAreaArray, provinceArray, index: 0, id: 0, name: '' };\n    }\n\n    var index = 0;\n    var id = 0;\n    var name = '';\n    let firstItem = null;\n    for (let i = 0; i < array.length; i++) {\n      let item = array[i] || {};\n      let cityLevel = item.cityLevel || 0;\n      if (cityLevel === 1) {\n        let cityName = item.cityName || '';\n        if (!id) {\n          let cityId = item.cityId || 0;\n          if (cityIdValue && cityId === cityIdValue) { //相对相等，不是绝对\n            id = cityId;\n            name = cityName;\n          }\n          else {\n            index++;\n          }\n        }\n        if (!firstItem) {\n          firstItem = item;\n        }\n        provinceArray.push(cityName);\n        allProvinceArray.push(item);\n      }\n      else if (cityLevel === 2) {\n        allCityArray.push(item);\n      }\n      else if (cityLevel === 3) {\n        allAreaArray.push(item);\n      }\n    }\n\n    if (!id) {\n      index = 0;\n      name = firstItem.cityName || '';\n      id = firstItem.cityId || 0;\n    }\n\n    return { allProvinceArray, allCityArray, allAreaArray, provinceArray, id, index, name };\n  },\n\n  getArrayWithParent(array = [], pCityId = 1, cityIdValue = '') {\n    if (!Array.isArray(array)) {\n      console.warn('getArrayName-> `array` not array');\n      return { array: [], index: 0 };\n    }\n    var newArray = [];\n    var index = 0;\n    var id = 0;\n    var name = '';\n    let firstItem = null;\n    for (var i = 0; i < array.length; i++) {\n      let item = array[i] || {};\n      let parentId = item.parentId || 0;\n      let cityId = item.cityId || 0;\n      let cityName = item.cityName || '';\n      if (pCityId && parentId === pCityId) {\n        if (!id) {\n          if (cityIdValue && cityId === cityIdValue) { //相对相等，不是绝对\n            name = cityName;\n            id = cityId;\n          }\n          else {\n            index++;\n          }\n        }\n        if (!firstItem) {\n          firstItem = item;\n        }\n        newArray.push(cityName);\n      }\n    }\n\n    if (!id) {\n      index = 0;\n      name = firstItem.cityName || '';\n      id = firstItem.cityId || 0;\n    }\n    return { array: newArray, index, id, name };\n  },\n\n  getArrayWithCityName(array = [], index = 0, allArray = []) {\n    var id = 0;\n    let name = '';\n    if (!Array.isArray(array)) {\n      console.warn('getArrayName-> `array` not array');\n      return { id, name };\n    }\n    if (index > array.length) {\n      console.warn('getArrayName-> `index > array.length`');\n      return { id, name };\n    }\n    name = array[index] || '';\n    let firstItem = null;\n    for (let i = 0; i < allArray.length; i++) {\n      let item = allArray[i] || {};\n      let itemName = item.cityName || '';\n      if (!firstItem) {\n        firstItem = item;\n      }\n      if (itemName === name) {\n        id = item.cityId || 0;\n        break;\n      }\n    }\n    if (!id) {\n      name = firstItem.cityName || '';\n      id = firstItem.cityId || 0;\n    }\n    return { id, name };\n  }\n}\n\nRXAddressPicker.propTypes = {\n  ...RXPicker.propTypes,\n  addressList: PropTypes.array,\n  selectValues: PropTypes.string,\n}\n\nRXAddressPicker.defaultProps = {\n  ...RXPicker.defaultProps,\n  addressList: [],\n}"]}