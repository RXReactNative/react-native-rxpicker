{"version":3,"sources":["../../src/components/RXDoublePicker.js"],"names":["React","Component","PropTypes","RXPicker","RXDoublePicker","constructor","props","resultIndexArray","value","getDoubleValue","state","getValue","index","list","selectValue","valueKey","i","length","item","selectValues","Array","isArray","array","push","render","style","other","emptyArray","lastList","proportionArray","valueArray","concat","paddingBottom","onChange","onConfirm","propTypes","arrayOf","oneOfType","object","number","string","defaultProps","scrollIndex","targetItemIndex","console","warn","resultArray"],"mappings":"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","file":"RXDoublePicker.js","sourcesContent":["/**\n *\n *\n * @flow\n */\n'use strict'\nimport React, {Component} from 'react';\nimport { } from 'react-native';\nimport PropTypes from 'prop-types';\n\nimport RXPicker from '../core/RXPicker';\n\nexport default class RXDoublePicker extends Component {\n  static propTypes = {\n    ...RXPicker.propTypes,\n    selectValues: PropTypes.arrayOf(\n      PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.number,\n        PropTypes.string,\n      ])\n    ),\n    valueKey: PropTypes.string,\n  }\n\n  static defaultProps = {\n    ...RXPicker.defaultProps,\n    list: [],\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.resultIndexArray = [0, 0];\n\n    let value = this.getDoubleValue(props);\n    this.state = {\n      value,\n    }\n  }\n\n  getValue(index = 0, list = [], selectValue = null, valueKey = null) {\n    if (!selectValue) return null;\n    if (typeof selectValue === 'string' || typeof selectValue === 'number') {\n      for (var i = 0; i < list.length; i++) {\n        let item = list[i] || '';\n        if (item === selectValue) {\n          this.resultIndexArray[index] = i || 0;\n          return i;\n        }\n      }\n      return 0;\n    }\n    else if (typeof selectValue === 'object' && valueKey) {\n      for (var i = 0; i < list.length; i++) {\n        let item = list[i] || {};\n        let value = item[valueKey];\n        if (value === selectValue) {\n          this.resultIndexArray[index] = i || 0;\n          return i;\n        }\n      }\n      return 0;\n    }\n  }\n\n  getDoubleValue(props) {\n    let selectValues = props.selectValues;\n    let valueKey = props.valueKey;\n    const list = props.list || [];\n    if (!Array.isArray(selectValues)) return null;\n    var value = [];\n    for (var i = 0; i < list.length; i++) {\n      const array = list[i] || [];\n      if (selectValues.length > i) {\n        let selectValue = selectValues[i];\n        value.push(this.getValue(i, array, selectValue, valueKey));\n      }\n      else {\n        value.push(0)\n        this.resultIndexArray[i] = 0;\n      }\n    }\n    return value;\n  }\n\n  onChange = (scrollIndex = 0, targetItemIndex = 0) => {\n    const { onChange } = this.props;\n    // console.log('onChange=> scrollIndex='+scrollIndex+',,,targetItemIndex='+targetItemIndex);\n    this.resultIndexArray[scrollIndex - 1] = targetItemIndex;\n    onChange && onChange(scrollIndex, targetItemIndex);\n  }\n\n  onConfirm = () => {\n    let { list, onConfirm } = this.props;\n    list = list || [];\n    if (!this.resultIndexArray || this.resultIndexArray.length > list.length) {\n      console.warn('YLDoublePicker 数组越界');\n      return;\n    }\n    let length = this.resultIndexArray.length;\n    var resultArray = [];\n    for (var i = 0; i < length; i++) {\n      let index = this.resultIndexArray[i] || 0;\n      let array = list[i] || [];\n      if (index > array.length) {\n        console.warn('YLDoublePicker 数组越界');\n        resultArray.push('');\n      }\n      else {\n        let value = array[index];\n        resultArray.push(value);\n      }\n    }\n    onConfirm && onConfirm(resultArray);\n  }\n\n  render() {\n    const { style, list, ...other } = this.props;\n    const { value } = this.state;\n    // 前后的 空数组 处理\n    let emptyArray = [];\n    let lastList = [emptyArray];\n    var proportionArray = [1];\n    var valueArray = ([0].concat(value)).concat(0);\n    for (var i = 0; i < list.length; i++) {\n      let array = list[i] || [];\n      lastList.push(array);\n      proportionArray.push(1);\n    }\n    lastList.push(emptyArray)\n    proportionArray.push(1);\n\n    return <RXPicker\n            {...other}\n            style={[{paddingBottom: 20}, style]}\n\n            // 数据源\n            list={ lastList }\n\n            // 选中的\n            value={valueArray}\n\n            // 分区比例，注意和list数据源长度保持一致 (如果一致的，可以不写)\n            proportion={ proportionArray }\n            // 选中项距离顶部的偏移个数\n            offsetCount={ 2 }\n            onChange={this.onChange}\n            onConfirm={this.onConfirm}\n          />\n  }\n}"]}