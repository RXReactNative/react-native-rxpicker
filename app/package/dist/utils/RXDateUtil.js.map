{"version":3,"sources":["../../src/utils/RXDateUtil.js"],"names":["YLDateUtil","isTodayHour","date1","date2","date1Map","formatDateMap","date2Map","year","month","day","hour","getNextDate","hours","min","sec","ms","now","Date","setDate","getDate","setHours","weekStringArray","formatDateString","time","format","date","getFullYear","getMonth","getHours","getMinutes","getSeconds","preArr","Array","apply","map","elem","index","newTime","replace","week","getDay","weekString","monthString","dayString","hourString","minString","secString","yearString"],"mappings":"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","file":"RXDateUtil.js","sourcesContent":["\nconst YLDateUtil = {\n\n  isTodayHour(date1=0, date2=0) {\n    if(date1 === date2) return true;\n    let date1Map = this.formatDateMap(date1);\n    let date2Map = this.formatDateMap(date2);\n    if( date1Map.year === date2Map.year &&\n        date1Map.month === date2Map.month &&\n        date1Map.day === date2Map.day &&\n        date1Map.hour === date2Map.hour\n      ) {\n        return true;\n      }\n    return false;\n  },\n\n  getNextDate(day=0, hours=12, min=0, sec=0, ms=0) {\n    var now = new Date();\n    now.setDate(now.getDate() + day);\n    now.setHours(hours, min, sec, ms);\n    return now;\n  },\n\n  weekStringArray: function() {\n    return ['星期日','星期一','星期二','星期三','星期四','星期五','星期六'];\n  },\n  /**\n   * 日期格式化成字符串\n   * \n   * @param {*} time   时间戳\n   * @param {*} format 格式样式\n   */\n  formatDateString: function(time,format='YY-MM-DD hh:mm:ss'){\n    var date = new Date(time);\n\n    var year = date.getFullYear(),\n        month = date.getMonth()+1, // 月份是从0开始的\n        day = date.getDate(),\n        hour = date.getHours(),\n        min = date.getMinutes(),\n        sec = date.getSeconds();\n    var preArr = Array.apply(null,Array(10)).map(function(elem, index) {\n        return '0'+index;\n    }); //// 开个长度为10的数组 格式为 00 01 02 03\n\n    var newTime = format.replace(/YY/g,year)\n                        .replace(/MM/g,preArr[month]||month)\n                        .replace(/DD/g,preArr[day]||day)\n                        .replace(/hh/g,preArr[hour]||hour)\n                        .replace(/mm/g,preArr[min]||min)\n                        .replace(/ss/g,preArr[sec]||sec);\n\n    return newTime;\n  },\n\n  formatDateMap: function(time) {\n    var date = new Date(time);\n    if(!date) date = new Date();\n\n    let year = date.getFullYear(),\n        month = date.getMonth()+1, // 月份是从0开始的\n        day = date.getDate(),\n        hour = date.getHours(),\n        min = date.getMinutes(),\n        sec = date.getSeconds(),\n        week = date.getDay();\n\n    let weekString = this.weekStringArray()[week] || week;\n\n    var preArr = Array.apply(null,Array(10)).map(function(elem, index) {\n      return '0'+index;\n    });//// 开个长度为10的数组 格式为 00 01 02 03\n\n    let monthString = preArr[month] || month;\n    let dayString = preArr[day] || day;\n    let hourString = preArr[hour] || hour;\n    let minString = preArr[min] || min;\n    let secString = preArr[sec] || sec;\n\n    return {\n      year, month, day, hour, min, sec, week,\n\n      yearString: ''+year,monthString, dayString, \n      hourString, minString, secString, \n      weekString,\n    };\n  }\n\n}\n\nexport default YLDateUtil;"]}