{"version":3,"sources":["../../src/utils/RXDateUtil.js"],"names":["YLDateUtil","isTodayHour","date1","date2","date1Map","formatDateMap","date2Map","year","month","day","hour","getNextDate","hours","min","sec","ms","now","Date","setDate","getDate","setHours","weekStringArray","formatDateString","time","format","date","getFullYear","getMonth","getHours","getMinutes","getSeconds","preArr","Array","apply","map","elem","index","newTime","replace","week","getDay","weekString","monthString","dayString","hourString","minString","secString","yearString"],"mappings":"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","file":"RXDateUtil.js","sourcesContent":["\nconst YLDateUtil = {\n\n  isTodayHour(date1 = 0, date2 = 0) {\n    if (date1 === date2) return true;\n    const date1Map = this.formatDateMap(date1);\n    const date2Map = this.formatDateMap(date2);\n    if (date1Map.year === date2Map.year &&\n      date1Map.month === date2Map.month &&\n      date1Map.day === date2Map.day &&\n      date1Map.hour === date2Map.hour\n    ) {\n      return true;\n    }\n    return false;\n  },\n\n  getNextDate(day = 0, hours = 12, min = 0, sec = 0, ms = 0) {\n    let now = new Date();\n    now.setDate(now.getDate() + day);\n    now.setHours(hours, min, sec, ms);\n    return now;\n  },\n\n  weekStringArray: function () {\n    return ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六'];\n  },\n  /**\n   * 日期格式化成字符串\n   *\n   * @param {*} time   时间戳\n   * @param {*} format 格式样式\n   */\n  formatDateString: function (time, format = 'YY-MM-DD hh:mm:ss') {\n    const date = new Date(time);\n\n    const year = date.getFullYear(),\n      month = date.getMonth() + 1, // 月份是从0开始的\n      day = date.getDate(),\n      hour = date.getHours(),\n      min = date.getMinutes(),\n      sec = date.getSeconds();\n    const preArr = Array.apply(null, Array(10)).map(function (elem, index) {\n      return '0' + index;\n    }); //// 开个长度为10的数组 格式为 00 01 02 03\n\n    const newTime = format.replace(/YY/g, year)\n      .replace(/MM/g, preArr[month] || month)\n      .replace(/DD/g, preArr[day] || day)\n      .replace(/hh/g, preArr[hour] || hour)\n      .replace(/mm/g, preArr[min] || min)\n      .replace(/ss/g, preArr[sec] || sec);\n\n    return newTime;\n  },\n\n  formatDateMap: function (time) {\n    let date = new Date(time);\n    if (!date) date = new Date();\n\n    const year = date.getFullYear(),\n      month = date.getMonth() + 1, // 月份是从0开始的\n      day = date.getDate(),\n      hour = date.getHours(),\n      min = date.getMinutes(),\n      sec = date.getSeconds(),\n      week = date.getDay();\n\n    const weekString = this.weekStringArray()[week] || week;\n\n    const preArr = Array.apply(null, Array(10)).map(function (elem, index) {\n      return '0' + index;\n    });//// 开个长度为10的数组 格式为 00 01 02 03\n\n    const monthString = preArr[month] || month;\n    const dayString = preArr[day] || day;\n    const hourString = preArr[hour] || hour;\n    const minString = preArr[min] || min;\n    const secString = preArr[sec] || sec;\n\n    return {\n      year, month, day, hour, min, sec, week,\n\n      yearString: '' + year, monthString, dayString,\n      hourString, minString, secString,\n      weekString,\n    };\n  }\n\n}\n\nexport default YLDateUtil;"]}